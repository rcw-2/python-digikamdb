# Automatic test on push/pull request
# Derived from: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - ".gitignore"
      - ".readthedocs.yaml"
      - "docs/**"
      - MANIFEST.in
      - README.rst
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - ".gitignore"
      - ".readthedocs.yaml"
      - "docs/**"
      - MANIFEST.in
      - README.rst
  workflow_dispatch: {}

jobs:
  check:
    
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install flake8
      run: |
        # Install flake8 
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --statistics
  
  build_and_test:
    
    needs:
      - check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        mysql-version:
          - "mysql-8.0"
          - "mariadb-10.4"
          - "mariadb-10.5"
          - "mariadb-10.6"
    steps:
    - name: Set up MariaDB ${{ matrix.mysql-version }}
      uses: shogo82148/actions-setup-mysql@v1
      with:
        distribution:   ${{ matrix.mysql-flavor }}
        mysql-version:  ${{ matrix.mysql-version }}
        root-password:  ${{ secrets.MYSQL_ROOT_PW }}
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        # There seems to be no easy way to install dependencies
        # from pyproject.toml, so we just install the package...
        pip install -e .[mysql]
    - name: Prepare database
      run: |
        mysql -u root -h 127.0.0.1 -p"${{ secrets.MYSQL_ROOT_PW }}" <<EOF
        CREATE DATABASE digikam;
        CREATE USER digikam@localhost IDENTIFIED BY '${{ secrets.MYSQL_USER_PW }}';
        GRANT ALL PRIVILEGES ON digikam.* TO digikam@localhost;
        EOF
        zcat tests/data/testdb.sql.gz | mysql -u digikam -h 127.0.0.1 -p"${{ secrets.MYSQL_USER_PW }}" digikam
    - name: Test with Python unittest
      run: |
        cat >mysql_data.py <<EOF
        mysql_db = 'mysql+pymysql://digikam:${{ secrets.MYSQL_USER_PW }}@localhost/digikam'
        root_override = None
        test_data = None
        EOF
        mount
        ls -l /dev/disk/by-uuid
        python -m unittest -v
#    - name: Test with pytest
#      run: |
#        pytest
